{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","length","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b9f7c69a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href='/about'>{props.aboutText}</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n};\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase Clicked\")\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    // Credits: A\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"on Changed\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Conver To Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Conver To Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2>Your Text summary</h2>\r\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} minutes Read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\r\nimport './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm'\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About US\"/> */}\r\n        {/* <Navbar/> */}\r\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          {/* <Routes>\r\n            <Route exact path=\"/about\" element={<About />} />\r\n            <Route exact path=\"/\"\r\n              element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode} />} />\r\n          </Routes> */}\r\n          <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode} />\r\n        </div>\r\n      {/* </Router> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(); \r\n"],"sourceRoot":""}